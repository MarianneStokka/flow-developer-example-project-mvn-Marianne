<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <properties>
        <!-- Project configuration -->
        <encoding>UTF-8</encoding>
        <haltOnCoverageFailure>true</haltOnCoverageFailure>
        <jdk-version>11</jdk-version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <!-- Kotlin -->
        <kotlin.code.style>official</kotlin.code.style>
        <kotlin.compiler.incremental>true</kotlin.compiler.incremental>
        <kotlin-version>1.6.10</kotlin-version>

        <!-- Dependency versions -->
        <assertj-version>3.22.0</assertj-version>
        <flow-developer-sdk-version>2.83.0</flow-developer-sdk-version>
        <javax.ws.rs-api-version>2.1.1</javax.ws.rs-api-version>
        <junit5-version>5.8.2</junit5-version>
        <slf4j-version>1.7.36</slf4j-version>
        <wiremock-version>2.32.0</wiremock-version>

        <!-- Plugins -->
        <maven-exec-version>3.0.0</maven-exec-version>
        <maven-surefire-version>3.0.0-M5</maven-surefire-version>
    </properties>

    <groupId>com.greenbird.utilihive.integration.flow-developer</groupId>
    <artifactId>flow-developer-example-project</artifactId>
    <version>1.0.0-SNAPSHOT</version>

    <name>Utilihive Flow Developer Example Project</name>
    <description>Example Project for Utilihive Flow Developers</description>

    <!--
        The flow-developer-sdk dependency is fetched from this repository.
        The credentials for the greenbird repository are only available for licensed users.
        They must be added to the servers section of your Maven settings.xml file.
        See README.adoc for more details.
    -->
    <repositories>
        <repository>
            <id>utilihive-sdk</id>
            <url>https://nexus.greenbird.com/content/repositories/utilihive-sdk/</url>
        </repository>
    </repositories>

    <dependencyManagement>
        <dependencies>
            <!-- JUnit 5 -->
            <dependency>
                <groupId>org.junit</groupId>
                <artifactId>junit-bom</artifactId>
                <version>${junit5-version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-bom</artifactId>
                <version>${kotlin-version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>

        <!-- Kotlin -->
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-stdlib</artifactId>
        </dependency>

        <!-- Greenbird -->
        <dependency>
            <groupId>com.greenbird.utilihive.integration.flow-developer</groupId>
            <artifactId>flow-developer-sdk</artifactId>
            <version>${flow-developer-sdk-version}</version>
        </dependency>


        <!-- TEST -->

        <!-- AssertJ -->
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>${assertj-version}</version>
            <scope>test</scope>
        </dependency>

        <!-- JAX-RS - REST client -->
        <dependency>
            <groupId>javax.ws.rs</groupId>
            <artifactId>javax.ws.rs-api</artifactId>
            <scope>test</scope>
            <version>${javax.ws.rs-api-version}</version>
        </dependency>

        <!-- JUnit -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-launcher</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- SLF4J-->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
            <version>${slf4j-version}</version>
            <scope>test</scope>
        </dependency>

        <!-- WireMock -->
        <dependency>
            <groupId>com.github.tomakehurst</groupId>
            <artifactId>wiremock-jre8-standalone</artifactId>
            <version>${wiremock-version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>

        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>exec-maven-plugin</artifactId>
                    <version>${maven-exec-version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${maven-surefire-version}</version>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>

            <plugin>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-maven-plugin</artifactId>
                <version>${kotlin-version}</version>

                <configuration>
                    <args>
                        <arg>-java-parameters</arg>
                    </args>
                    <jvmTarget>${jdk-version}</jvmTarget>
                </configuration>

                <executions>
                    <execution>
                        <id>compile</id>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                        <configuration>
                            <sourceDirs>
                                <sourceDir>src/main/kotlin</sourceDir>
                                <sourceDir>src/main/java</sourceDir>
                            </sourceDirs>
                        </configuration>
                    </execution>
                    <execution>
                        <id>test-compile</id>
                        <goals>
                            <goal>test-compile</goal>
                        </goals>
                        <configuration>
                            <sourceDirs>
                                <sourceDir>src/test/kotlin</sourceDir>
                                <sourceDir>src/test/java</sourceDir>
                            </sourceDirs>
                        </configuration>
                    </execution>
                </executions>

            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <!--
                        Activate the use of TCP to transmit events to the plugin to avoid getting
                        "Corrupted STDOUT by directly writing to native stream in forked JVM" errors when
                        running concurrent tests.
                    -->
                    <forkNode implementation="org.apache.maven.plugin.surefire.extensions.SurefireForkNodeFactory"/>
                    <!--
                        Disable forking so we can see the log output from the test immediately, instead of at the
                        end of each test execution.
                     -->
                    <forkCount>0</forkCount>
                </configuration>
            </plugin>

        </plugins>
    </build>

    <profiles>

        <!--
            Encrypt secrets from the command line:
            mvn -P encrypt-secret -D uhSecretsKey=<encryption key> -D uhSecretsValue=<value>
         -->
        <profile>
            <id>encrypt-secret</id>
            <build>
                <defaultGoal>validate</defaultGoal>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>encrypt-secret</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>java</goal>
                                </goals>
                                <configuration>
                                    <mainClass>
                                        com.greenbird.utilihive.integration.flowdeveloper.sdk.utils.security.SecretsEncryptor
                                    </mainClass>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!--
            Decrypt secrets from the command line:
            mvn -P decrypt-secret -D uhSecretsKey=<encryption key> -D uhSecretsValue=<encrypted value>
         -->
        <profile>
            <id>decrypt-secret</id>
            <build>
                <defaultGoal>validate</defaultGoal>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>decrypt-secret</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>java</goal>
                                </goals>
                                <configuration>
                                    <mainClass>
                                        com.greenbird.utilihive.integration.flowdeveloper.sdk.utils.security.SecretsDecryptor
                                    </mainClass>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>
